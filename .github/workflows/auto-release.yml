name: Automated Releases
on:
  schedule:
    - cron: 0 0 * * 1,2,3,4,5
  workflow_dispatch:

permissions:
  contents: write

# This Workflow is triggered through the GitHub API:
#   curl -X Post \
#        -H "Authorization: Bearer <token>" \
#        -d '{"ref":"master"}' \
#        https://api.github.com/repos/simple-icons/simple-icons-website/actions/workflows/auto-release.yml/dispatches
# Replacing <token> by a personal access token with scope `public_repo`

jobs:
  auto-release:
    name: Automated release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          # Ensure we are checked out on the master branch
          ref: master
          # Ensure custom credentials are used when pushing
          persist-credentials: false
      - name: Setup Rust nightly
        run: |
          curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y
          rustup default nightly
      - name: Cache Rust dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            ~/.cargo/.crates.toml
            ~/.cargo/.crates2.json
            target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}-${{ hashFiles('**/scripts/src/bump-simple-icons.rs') }}-nightly
      - name: Cache Node.js dependencies
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}-v18
          restore-keys: |
            ${{ runner.os }}-node-
      - name: Use Node.js 18.x
        uses: actions/setup-node@v3
        with:
          node-version: 18.x
      - name: Compare release versions
        id: get-releases
        run: |
          simple_icons_version="$(curl --retry 5 -s https://api.github.com/repos/simple-icons/simple-icons/releases/latest | jq -r .tag_name)"
          echo "si=$simple_icons_version" >> $GITHUB_OUTPUT
          echo "lib=$(cat package.json | grep '"simple-icons":' | cut -d'"' -f4)" >> $GITHUB_OUTPUT
      - name: Update simple-icons
        if: steps.get-releases.outputs.lib != steps.get-releases.outputs.si
        run: npm run bump-simple-icons
      - name: Commit updates
        if: steps.get-releases.outputs.lib != steps.get-releases.outputs.si
        run: |
          # Set up git credential
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git config --global user.name "github-actions[bot]"
          # Create a commit for the simple-icons dependency update
          git add .
          git commit -m "Update simple-icons to ${{ steps.update.outputs.NEW_VERSION }}"
      - name: Push updates
        if: steps.get-releases.outputs.lib != steps.get-releases.outputs.si
        run: |
          # Set up remote using a Personal Access Token
          git remote remove origin
          git remote add origin https://${{secrets.RELEASE_TOKEN}}@github.com/simple-icons/simple-icons-website.git
          # Push updates to origin
          git push origin master

      - name: Install Node.js dependencies
        if: steps.get-releases.outputs.lib != steps.get-releases.outputs.si
        run: npm ci
      - name: Install Playwright browsers
        if: steps.get-releases.outputs.lib != steps.get-releases.outputs.si
        run: npx playwright install --with-deps
      - name: Install tooling dependencies
        if: steps.get-releases.outputs.lib != steps.get-releases.outputs.si
        run: cargo install cargo-make
      - name: Build
        if: steps.get-releases.outputs.lib != steps.get-releases.outputs.si
        run: cargo make builds
        env:
          GITHUB_TOKEN: ${{ secrets.SECRET_GITHUB_TOKEN }}
      - name: Run `cargo make tests`
        if: steps.get-releases.outputs.lib != steps.get-releases.outputs.si
        run: cargo make tests
      - name: Publish website
        if: steps.get-releases.outputs.lib != steps.get-releases.outputs.si
        uses: JamesIves/github-pages-deploy-action@v4
        with:
          branch: gh-pages
          folder: app/dist
          single-commit: true
          git-config-name: github-actions[bot]
          git-config-email: github-actions[bot]@users.noreply.github.com
